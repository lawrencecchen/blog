---
import BaseHead from '../components/BaseHead.astro';
import BlogPostPreview from '../components/BlogPostPreview.astro';
import Footer from "../components/Footer.astro";

const title = `Lawrence Chen's website`;
let description = `Lawrence Chen's website`;

// Get all posts from both .md and .mdx files
const allPosts = await Promise.all([
  import.meta.glob('./*.md', { eager: true }),
  import.meta.glob('./*.mdx', { eager: true })
]);

const posts = Object.entries({...allPosts[0], ...allPosts[1]})
  .map(([path, post]: [string, any]) => ({
    url: path.replace('./', '/').replace(/\.(md|mdx)$/, '/'),
    frontmatter: post.frontmatter
  }))
  .filter(post => typeof post.frontmatter.published === 'undefined' || !!post.frontmatter.published)
  .sort((a, b) => {
    const dateA = new Date(a.frontmatter.publishDate);
    const dateB = new Date(b.frontmatter.publishDate);
    
    // Check if dates are valid
    const isValidA = !isNaN(dateA.getTime());
    const isValidB = !isNaN(dateB.getTime());
    
    // If both dates are invalid, maintain original order
    if (!isValidA && !isValidB) return 0;
    
    // If only A is invalid, put it at the end
    if (!isValidA) return 1;
    
    // If only B is invalid, put it at the end
    if (!isValidB) return -1;
    
    // Both dates are valid, sort in descending order (newest first)
    return dateB.valueOf() - dateA.valueOf();
  });
---

<html lang="en">

<head>
  <BaseHead title={title} description={description} />
</head>

<body>
  <main class="max-w-3xl w-full mx-auto mt-10 md:mt-20 p-4">
    <section class="py-8 border-b mb-8">
      <h1 class="text-center mx-auto text-3xl font-medium text-neutral-800">{title}</h1>
    </section>
    <section aria-label="Blog post list" class="space-y-2">
      {posts.map(({ url, frontmatter }) => (
      <BlogPostPreview title={frontmatter.title} description={frontmatter.description ?? "" }
        publishDate={frontmatter.publishDate} url={url ?? "" } />
      ))}
    </section>
    <Footer />
  </main>
</body>

</html>